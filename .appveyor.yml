environment:
  matrix:
    - TARGET_ARCH: "x64"
      CONDA_PY: "27"
      PY_CONDITION: "python >=2.7,<3"
      CONDA_INSTALL_LOCN: "C:\\Miniconda-x64"
    - TARGET_ARCH: "x64"
      CONDA_PY: "35"
      PY_CONDITION: "python >=3.5,<3.6"
      CONDA_INSTALL_LOCN: "C:\\Miniconda35-x64"
    - TARGET_ARCH: "x64"
      CONDA_PY: "36"
      PY_CONDITION: "python >=3.6"
      CONDA_INSTALL_LOCN: "C:\\Miniconda36-x64"

matrix:
  fast_finish: true

cache:
  - "%TMP%\\py\\"

build: false
install:
  - set CONDA_NPY=19
  # Remove cygwin (and therefore the git that comes with it).
  - rmdir C:\cygwin /s /q
  # Use the pre-installed Miniconda for the desired arch
  - set PATH=%CONDA_INSTALL_LOCN%/Library/bin;%CONDA_INSTALL_LOCN%/Scripts;%PATH%
  - conda update --yes --quiet conda
  - call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
  - conda config --add channels conda-forge
  - conda config --set show_channel_urls true
  - conda install --yes --quiet conda-build-all
  - conda update --yes conda-build
  - conda install --yes --quiet conda-forge-build-setup
  - run_conda_forge_build_setup

test_script:
  - conda build conda-recipe

after_test:
  - python ci\move-conda-package.py
  - virtualenv my_pip
  - my_pip\Scripts\activate
  - pip install -U pip wheel
  - pip install https://github.com/pkittenis/conda2wheel/archive/master.zip
  - ls %CONDA_INSTALL_LOCN%/Library/bin/
  - mkdir lib_deps
  - cp %CONDA_INSTALL_LOCN%/Library/bin/*.dll lib_deps/
  - rm -f lib_deps/atl90.dll lib_deps/yaml.dll
  - conda2wheel *.tar.bz2 -d lib_deps/* -s ssh2 -w .
  - ls *.whl
  - python -c "from __future__ import print_function; import pip; print(pip.pep425tags.get_supported())"
  - ps: pip install -v (Get-ChildItem *.whl)
  - mkdir temp
  - cd temp
  - python -c "from ssh2.session import Session; Session()"

platform:
  - x64

artifacts:
  - path: '*.tar.bz2'
  - path: '*.whl'
